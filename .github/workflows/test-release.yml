name: Test Release Workflow

on:
  workflow_dispatch:
    inputs:
      run_test:
        description: 'Simulate a package.json version change'
        default: 'true'
        required: true
        type: boolean

jobs:
  test-version-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Create mock package.json changes
        run: |
          if [ "${{ github.event.inputs.run_test }}" = "true" ]; then
            # Create a copy of the current package.json
            cp package.json package.json.bak
            
            # Get current version
            CURRENT_VERSION=$(jq -r '.version' package.json)
            echo "Current version: $CURRENT_VERSION"
            
            # Generate a test version (adding .test suffix)
            TEST_VERSION="${CURRENT_VERSION}.test"
            echo "Test version: $TEST_VERSION"
            
            # Update package.json with test version
            jq --arg version "$TEST_VERSION" '.version = $version' package.json > package.json.new
            mv package.json.new package.json
            
            echo "Mock package.json with version $TEST_VERSION:"
            cat package.json | grep version
            
            # Now test the version checking logic
            echo "Simulating version check logic..."
            OLD_VERSION=$CURRENT_VERSION
            NEW_VERSION=$TEST_VERSION
            
            if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
              echo "✅ Version change detected from $OLD_VERSION to $NEW_VERSION"
              echo "version_changed=true" >> $GITHUB_OUTPUT
              echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
            else
              echo "❌ Version unchanged"
              echo "version_changed=false" >> $GITHUB_OUTPUT
            fi
            
            # Restore the original package.json
            mv package.json.bak package.json
            echo "Restored original package.json"
          else
            echo "Test skipped"
          fi

      - name: Explain workflow
        run: |
          echo "This is a test workflow to verify the release automation logic."
          echo "In a real scenario, when package.json version changes, the release workflow will:"
          echo "1. Detect the version change"
          echo "2. Build the package"
          echo "3. Run tests"
          echo "4. Create a GitHub release"
          echo "5. Publish to npm"
          echo ""
          echo "No actual releases or publishes are performed by this test workflow."